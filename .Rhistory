st.SMR<-(NW.dataset$SMR-mean(NW.dataset$SMR))/sd(NW.dataset$SMR)
# xx<-moran.plot(st.SMR, weight.object ,labels=as.factor(NW.dataset$NAME), pch=19, main="Moran Plot")
chosen.model = results.spatial
chosen.model = results.convo
RR.vector = chosen.model$mean$RR
my.colours <- c("yellow", "orange2", "red3", "brown", "black")
brks <- round(quantile(NW.dataset$SMR, probs=seq(0,1,0.2)), digits=2)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.7,3))
plot(NW.dataset, col=my.colours[findInterval(SMR, brks,all.inside=TRUE)], main="SMR")
text(coordinates(NW.dataset), label=round(SMR, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
plot.new()
legend("center", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=1, title="Percentils")
brks <- round(quantile(RR.vector, probs=seq(0,1,0.2)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(RR.vector, brks,all.inside=TRUE)], main="RR")
text(coordinates(NW.dataset), label=round(RR.vector, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
chosen.model = results.spatial
RR.vector = chosen.model$mean$RR
my.colours <- c("yellow", "orange2", "red3", "brown", "black")
brks <- round(quantile(NW.dataset$SMR, probs=seq(0,1,0.2)), digits=2)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.7,3))
plot(NW.dataset, col=my.colours[findInterval(SMR, brks,all.inside=TRUE)], main="SMR")
text(coordinates(NW.dataset), label=round(SMR, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
plot.new()
legend("center", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=1, title="Percentils")
brks <- round(quantile(RR.vector, probs=seq(0,1,0.2)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(RR.vector, brks,all.inside=TRUE)], main="RR")
text(coordinates(NW.dataset), label=round(RR.vector, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
df= data.frame( type=c("spatial", "heterogeneity", "convolutional"),
DIC = c(results.spatial$DIC, results.heterogenity$DIC, results.convo$DIC) )
# rownames(df)=rep("", 3)
df
xx = seq(-1e4, 1e4, length=1e4)
f=arctan(xx)
f=atan(xx)
f=atan(sinh(xx))
f=atan(sinh(xx))*sin(atan(sinh(xx)))
xx = seq(-1e4, 1e4, length=1e4)
f= function(x){
return(atan(sinh(x))*sin(atan(sinh(x))))
}
integrate(f, -1e4, 1e4)
-1elimit
-10^limit
limit=4
-10^limit
integrate(f, -10^limit, 10^limit)
{limit=5
integrate(f, -10^limit, 10^limit)
}
plot(xx, f(xx), type="l")
{limit=6
integrate(f, -10^limit, 10^limit)
}
my.colours <- c("yellow", "orange2", "red3", "brown", "black")
brks <- round(quantile(NW.dataset$SMR, probs=seq(0,1,0.2)), digits=2)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.7,3))
plot(NW.dataset, col=my.colours[findInterval(SMR, brks,all.inside=TRUE)], main="SMR")
text(coordinates(NW.dataset), label=round(SMR, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
plot.new()
integrate(f)
integrate(f, lower = -inf)
integrate(f, lower = -Inf, upper = Inf)
sech(2)
sinh(1)
sec(x)
sec(1)
a=1
b=1
theta=1
f= function(x){
return( b*2*atan(sinh(x))*sin(2*atan(sinh(x))) + 2/cosh(x)*(a*cos(x+theta) - b/cosh(x)))
}
plot(xx, f(xx), type="l")
integrate(f, lower = -Inf, upper = Inf)
g= function(x){
return( 2/cosh(x)*( - b/cosh(x)))
}
integrate(g, lower = -Inf, upper = Inf)
return( 1/cosh(x)*( - 1/cosh(x)))
g= function(x){
return( 1/cosh(x)*( - 1/cosh(x)))
}
integrate(g, lower = -Inf, upper = Inf)
f= function(x){
return( b*2*atan(sinh(x))*sin(2*atan(sinh(x))) + 2/cosh(x)*(a*cos(x+theta) - b/cosh(x)))
}
plot(xx, f(xx), type="l")
integrate(f, lower = -Inf, upper = Inf)
plot(xx, f(xx), type="l")
plot(xx, f1(xx), type="l")
f1= function(x){
return( b*2*atan(sinh(x))*sin(2*atan(sinh(x))) )
}
f1(xx)
plot(xx, f1(xx), type="l")
integrate(f, lower = -Inf, upper = Inf)
integrate(f1, lower = -Inf, upper = Inf)
eps=1e-4
N=10/eps
f = function(punto){
x=punto[1]
y=punto[2]
return( c(x+eps, y+2*eps))
}
vec=c(0, 0)
for(i in 1:N){
vec = rbind(vec, f(vec[1,]))
}
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[1,]))
}
eps=1e-3
N=10/eps
f = function(punto){
x=punto[1]
y=punto[2]
return( c(x+eps, y+2*eps))
}
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[1,]))
}
vec
plot(vec[,1], vec[,2])
max(vec)
N
N*eps
eps=1e-2
N=10/eps
f = function(punto){
x=punto[1]
y=punto[2]
return( c(x+eps, y+2*eps))
}
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[1,]))
}
vec
max(vec)
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
max(vec)
plot(vec[,1], vec[,2])
f = function(punto){
x=punto[1]
y=punto[2]
temp = c(x+eps, y+2*eps)
if(temp[1]>1)
temp[1]=temp[1]-1
if(temp[2]>1)
temp[2]=temp[2]-1
return( temp)
}
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
max(vec)
plot(vec[,1], vec[,2])
f = function(punto){
x=punto[1]
y=punto[2]
temp = c(x+eps, y+3*eps)
if(temp[1]>1)
temp[1]=temp[1]-1
if(temp[2]>1)
temp[2]=temp[2]-1
return( temp)
}
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
plot(vec[,1], vec[,2])
for(j in seq(0,1, length=5)){
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
plot(vec[,1], vec[,2])
}
for(j in seq(0,1, length=5)){
vec=matrix(c(j, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
plot(vec[,1], vec[,2])
}
for(j in seq(0,1, length=5)){
for(k in seq(0,1, length=5)){
vec=matrix(c(j, k), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
plot(vec[,1], vec[,2])
}}
eps=1e-2
N=10/eps
f = function(punto){
x=punto[1]
y=punto[2]
temp = c(x+eps, y+3*eps)
if(temp[1]>1)
temp[1]=temp[1]-1
if(temp[2]>1)
temp[2]=temp[2]-1
return( temp)
}
vec=matrix(c(0, 0), nrow = 1)
for(i in 1:N){
vec = rbind(vec, f(vec[i,]))
}
plot(vec[,1], vec[,2])
hist(data$O, breaks = 25,  col=rgb(1,0,0,0.5), xlab="Number of events",
ylab="Frequency", main="Distribution of events", probability = FALSE)
hist(data$E, breaks = 12, probability = FALSE, col = rgb(0,0,1,0.5), add=T)
legend("topright", legend=c("Observed","Expected"), col=c(rgb(1,0,0,0.5),
rgb(0,0,1,0.5)), pt.cex=2, pch=15 )
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
library(spdep)
library(sf)
library(classInt)
library(maptools)
library(R2WinBUGS)
library(foreign)
library(spatialreg)
# load("data.Rdata")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
resid=chosen.model$mean$resid
random.effect = log(resid)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.2,3))
my.colours <- c("darkgreen", "green", "orange2", "red3")
# brks <- round(quantile(random.effect, probs=seq(0,1,0.25)), digits=2)
brks <- c(min(random.effect), -0.3, 0, 0.35, max(random.effect))
# brks = c( seq(min(random.effect), 0, length=3), seq(0, max(random.effect), length=3) )
# brks = round(brks[-3], digits=2)
plot(NW.dataset, col=my.colours[findInterval(random.effect, brks,all.inside=TRUE)], main="Random Effect")
text(coordinates(NW.dataset), label=round(random.effect, digits=2),cex=0.5)
legend( "bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
plot.new()
# brks <- round(quantile(resid, probs=seq(0,1,0.25)), digits=2)
brks = c(min(resid), 0.74, 1, 1.41, max(resid))
plot(NW.dataset, col=my.colours[findInterval(resid, brks,all.inside=TRUE)], main="resid")
text(coordinates(NW.dataset), label=round(resid, digits=2),cex=0.5)
legend("bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
bugs(data=data.spatial,inits=laryx.inits.convo,
parameters.to.save = c("RR", "alpha0","sigma.s","sigma.h", "frac.spatial","s2.marginal", "sigma2.h"),
model.file=laryx.convolution,n.chains=3,n.iter=10000,n.burnin = 1000,n.thin=100,
bugs.directory=path.winbugs,debug=debug_on,codaPkg=codaPkg_on,working.directory=mybugsdir)
debug_on
bugs(data=data.spatial,inits=laryx.inits.convo,
parameters.to.save = c("RR", "alpha0","sigma.s","sigma.h", "frac.spatial","s2.marginal", "sigma2.h"),
model.file=laryx.convolution,n.chains=3,n.iter=10000,n.burnin = 1000,n.thin=100,
bugs.directory=path.winbugs,debug=debug_on,codaPkg=codaPkg_on,working.directory=mybugsdir)
bugs(data=data.spatial,inits=laryx.inits.convo,
parameters.to.save = c("RR", "alpha0","sigma.s","sigma.h", "frac.spatial","s2.marginal", "sigma2.h"),
model.file=laryx.convolution,n.chains=3,n.iter=100000,n.burnin = 1000,n.thin=100,
bugs.directory=path.winbugs,debug=debug_on,codaPkg=codaPkg_on,working.directory=mybugsdir)
# laryx.Poisson<-paste(getwd(),"/laringe_poisson_model.odc",sep="")
# laryx.inits<-list(
#                 list(alpha0=0),
#                 list(alpha0=-5e-01),
#                 list(alpha0=rnorm(1))
#             )
#
# path.winbugs<-paste("C:\\Users\\lofer\\WinBUGS14")
# mybugsdir<-"C:\\Users\\lofer\\OneDrive\\Documenti\\GitHub\\Epidemiology_2nd_Assignment\\Poisson"
#
# results.Poisson<-bugs(data=data, inits=laryx.inits,
#                   # parameters.to.save = c("RR","alpha0"),
#                   parameters.to.save = c("alpha0"),
#                   model.file=laryx.Poisson, n.chains=3, n.iter=2000, n.burnin = 1000,
#                   bugs.directory=path.winbugs, debug=debug_on, codaPkg=codaPkg_on, working.directory=mybugsdir)
#
# print(results.Poisson)
xxnb <- poly2nb(NW.dataset)
plot(NW.dataset, border="grey")
plot(xxnb, coordinates(NW.dataset), add=TRUE, col="blue")
resid=chosen.model$mean$resid
random.effect = log(resid)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.2,3))
my.colours <- c("darkgreen", "green", "orange2", "red3")
# brks <- round(quantile(random.effect, probs=seq(0,1,0.25)), digits=2)
brks <- c(min(random.effect), -0.3, 0, 0.35, max(random.effect))
# brks = c( seq(min(random.effect), 0, length=3), seq(0, max(random.effect), length=3) )
# brks = round(brks[-3], digits=2)
plot(NW.dataset, col=my.colours[findInterval(random.effect, brks,all.inside=TRUE)], main="Random Effect")
text(coordinates(NW.dataset), label=round(random.effect, digits=2),cex=0.5)
legend( "bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
library(spdep)
library(sf)
library(classInt)
library(maptools)
library(R2WinBUGS)
library(foreign)
library(spatialreg)
# load("data.Rdata")
resid=chosen.model$mean$resid
random.effect = log(resid)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.2,3))
my.colours <- c("darkgreen", "green", "orange2", "red3")
# brks <- round(quantile(random.effect, probs=seq(0,1,0.25)), digits=2)
brks <- c(min(random.effect), -0.3, 0, 0.35, max(random.effect))
# brks = c( seq(min(random.effect), 0, length=3), seq(0, max(random.effect), length=3) )
# brks = round(brks[-3], digits=2)
plot(NW.dataset, col=my.colours[findInterval(random.effect, brks,all.inside=TRUE)], main="Random Effect")
text(coordinates(NW.dataset), label=round(random.effect, digits=2),cex=0.5)
legend( "bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
plot.new()
# brks <- round(quantile(resid, probs=seq(0,1,0.25)), digits=2)
brks = c(min(resid), 0.74, 1, 1.41, max(resid))
plot(NW.dataset, col=my.colours[findInterval(resid, brks,all.inside=TRUE)], main="resid")
text(coordinates(NW.dataset), label=round(resid, digits=2),cex=0.5)
legend("bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
my.colours <- c("yellow", "orange2", "red3", "brown", "black")
brks <- round(quantile(NW.dataset$SMR, probs=seq(0,1,0.2)), digits=2)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.7,3))
plot(NW.dataset, col=my.colours[findInterval(SMR, brks,all.inside=TRUE)], main="SMR")
text(coordinates(NW.dataset), label=round(SMR, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
plot.new()
legend("center", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=1, title="Percentils")
library(spdep)
library(sf)
library(classInt)
library(maptools)
library(R2WinBUGS)
library(foreign)
library(spatialreg)
# load("data.Rdata")
my.colours <- c("yellow", "orange2", "red3", "brown", "black")
brks <- round(quantile(NW.dataset$SMR, probs=seq(0,1,0.2)), digits=2)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.7,3))
plot(NW.dataset, col=my.colours[findInterval(SMR, brks,all.inside=TRUE)], main="SMR")
text(coordinates(NW.dataset), label=round(SMR, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
plot.new()
legend("center", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=1, title="Percentils")
# brks <- round(quantile(RR.vector, probs=seq(0,1,0.2)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(RR.vector, brks,all.inside=TRUE)], main="RR")
text(coordinates(NW.dataset), label=round(RR.vector, digits=2),cex=0.5)
# legend("bottom", legend=leglabs(names(brks)),fill=my.colours, bty="n",cex=0.83, title="Percentils")
resid=chosen.model$mean$resid
random.effect = log(resid)
layout(matrix(c(1,2,3), nrow = 1), widths = c(3,1.2,3))
my.colours <- c("darkgreen", "green", "orange2", "red3")
# brks <- round(quantile(random.effect, probs=seq(0,1,0.25)), digits=2)
brks <- c(min(random.effect), -0.3, 0, 0.35, max(random.effect))
# brks = c( seq(min(random.effect), 0, length=3), seq(0, max(random.effect), length=3) )
# brks = round(brks[-3], digits=2)
plot(NW.dataset, col=my.colours[findInterval(random.effect, brks,all.inside=TRUE)], main="Random Effect")
text(coordinates(NW.dataset), label=round(random.effect, digits=2),cex=0.5)
legend( "bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
plot.new()
# brks <- round(quantile(resid, probs=seq(0,1,0.25)), digits=2)
brks = c(min(resid), 0.74, 1, 1.41, max(resid))
plot(NW.dataset, col=my.colours[findInterval(resid, brks,all.inside=TRUE)], main="Significance")
text(coordinates(NW.dataset), label=round(resid, digits=2),cex=0.5)
legend("bottom", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.8)
c(0, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
my.colours
my.colours <- c("lightgrey", "yellow", "orange2", "red3", "brown", "black")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- round(quantile(PV, probs=c(0, 0.5, 0.6, 0.7, 0.8, 0.9, 1)), digits=2)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3", "brown", "black")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3", "brown")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.7, 0.8, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3", "purple")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.7, 0.8, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.7, 0.8, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.7, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.5)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.7, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.3)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("lightgrey", "yellow", "orange2", "red3")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.5, 0.7, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
# text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.4)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("darkgreen", "green", "lightgreen", "yellow", "orange2", "red3")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.25, 0.5, 0.7, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.35)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
RR.simul=chosen.model$sims.list$RR
prob.vector = rep(NA, lunghezza)
for (i in 1:lunghezza) {
prob.vector[i]=sum(RR.simul[,i]>1) / (dim(RR.simul)[1])
}
PV = round(prob.vector, digits = 2)
my.colours <- c("darkgreen", "green", "lightgreen", "yellow", "orange2", "red3")
# brks <- round(quantile(PV, probs=seq(0,1,0.2)), digits=2)
brks <- c(0, 0.1, 0.3, 0.5, 0.7, 0.9, 1)
plot(NW.dataset, col=my.colours[findInterval(PV, brks,all.inside=TRUE)], main="prob(RR>1)")
text(coordinates(NW.dataset), label=round(PV, digits=2),cex=0.35)
legend("left", legend=leglabs(brks),fill=my.colours, bty="n",cex=0.83, title="")
